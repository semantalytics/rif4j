<project name="RIF4J" basedir="." default="jar">
	<tstamp />

	<property file="build.properties" />

	<patternset id="java-source-files">
		<include name="**/*.java" />
	</patternset>

	<path id="classpath">
		<fileset dir="${dir.lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="init">
		<mkdir dir="${dir.build}" />
	</target>


	<target name="clean" description="Deletes all generated files" depends="init">
		<delete dir="${dir.build}" />
	</target>

	<target name="compile" description="Compiles all the class files" depends="init">
		<delete dir="${dir.build.classes}" />
		<mkdir dir="${dir.build.classes}" />

		<copy todir="${dir.build.classes}">
			<fileset dir="${dir.src}">
				<patternset refid="java-source-files" />
				<include name="**/*.xsd" />
			</fileset>
		</copy>

		<javac srcdir="${dir.build.classes}" classpathref="classpath" destdir="${dir.build.classes}" deprecation="on">
			<patternset refid="java-source-files" />
		</javac>
	</target>

	<target name="doc" description="Generates the Javadoc" depends="init,prepare-doc">
		<javadoc destdir="${dir.build.javadoc}" link="http://java.sun.com/javase/6/docs/api/">
			<fileset dir="${dir.src}">
				<patternset refid="java-source-files" />
			</fileset>
		</javadoc>
	</target>

	<target name="compile-test" description="Compiles the test classes" depends="init,jar,prepare-compile-test">
		<javac srcdir="${dir.src.test}" destdir="${dir.build.test}" deprecation="on">
			<patternset refid="java-source-files" />
			<classpath>
				<path refid="classpath" />
				<fileset dir="${dir.build.jar}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="test" description="Runs JUnit tests" depends="init,jar,compile-test,prepare-test">
		<junit showoutput="true" printsummary="true" fork="yes">
			<classpath>
				<path refid="classpath" />
				<fileset dir="${dir.build.jar}">
					<include name="**/*.jar" />
				</fileset>
				<dirset dir="${dir.build.test}" />
				<dirset dir="${dir.src}" />
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${dir.test.reports}">
				<fileset dir="${dir.src.test}">
					<include name="**/Test*.java" />
					<include name="**/*Test.java" />
					<exclude name="**/Abstract*Test.java" />
					<exclude name="**/All*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
		<mkdir dir="${dir.build.test.reports}" />
		<junitreport todir="${dir.build.test.reports}">
			<report format="frames" todir="${dir.build.test.reports}" />
		</junitreport>
	</target>

	<target name="jar" description="Creates the jar file" depends="init,compile,prepare-jar">
		<jar basedir="${dir.build.classes}" destfile="${file.jar}" index="true" />
	</target>

	<target name="release" description="Packs the release archives" depends="prepare-release,jar,doc">
		<zip destfile="${file.src.zip}">
			<zipfileset dir="${dir.src}">
				<include name="**/*" />
			</zipfileset>
		</zip>

		<zip destfile="${file.javadoc.zip}">
			<zipfileset dir="${dir.build.javadoc}">
				<include name="**/*" />
			</zipfileset>
		</zip>

		<zip destfile="${file.release.zip}">
			<zipfileset dir="${dir.build.jar}">
				<include name="**/*.jar" />
			</zipfileset>

			<zipfileset dir="${dir.lib}" />

			<zipfileset dir="${basedir}">
				<include name="${file.javadoc.zip}" />
				<include name="${file.src.zip}" />
				<include name="License.txt" />
				<include name="ChangeLog.txt" />
			</zipfileset>
		</zip>
	</target>

	<target name="delete-classes" description="Deletes only the class files" depends="init">
		<delete dir="${dir.build.classes}" />
	</target>

	<target name="prepare-doc" depends="init">
		<mkdir dir="${dir.build.javadoc}" />
	</target>

	<target name="prepare-jar" depends="init">
		<mkdir dir="${dir.build.jar}" />
	</target>

	<target name="prepare-test" depends="init">
		<mkdir dir="${dir.build.test.reports}" />
	</target>

	<target name="prepare-compile-test" depends="init">
		<mkdir dir="${dir.build.test}" />
	</target>

	<target name="prepare-release" depends="init">
		<mkdir dir="${dir.build.release}" />
	</target>

</project>
